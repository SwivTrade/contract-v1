{
  "address": "2nga8op3u3j7Df7wsQv2n5hkRqjEFLjkWGGAfn4aHsfy",
  "metadata": {
    "name": "contracts",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "create_margin_account",
      "discriminator": [
        98,
        114,
        213,
        184,
        129,
        89,
        90,
        185
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "margin_account",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  97,
                  114,
                  103,
                  105,
                  110,
                  95,
                  97,
                  99,
                  99,
                  111,
                  117,
                  110,
                  116
                ]
              },
              {
                "kind": "account",
                "path": "owner"
              },
              {
                "kind": "account",
                "path": "market"
              }
            ]
          }
        },
        {
          "name": "market"
        },
        {
          "name": "vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "margin_account"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "account",
                "path": "mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "mint"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        },
        {
          "name": "associated_token_program",
          "address": "ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"
        }
      ],
      "args": [
        {
          "name": "bump",
          "type": "u8"
        }
      ]
    },
    {
      "name": "deposit_collateral",
      "discriminator": [
        156,
        131,
        142,
        116,
        146,
        247,
        162,
        120
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "margin_account",
          "writable": true
        },
        {
          "name": "user_token_account",
          "writable": true
        },
        {
          "name": "vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "margin_account"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "account",
                "path": "mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "mint"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    },
    {
      "name": "initialize_market",
      "discriminator": [
        35,
        35,
        189,
        193,
        155,
        48,
        170,
        203
      ],
      "accounts": [
        {
          "name": "market",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  109,
                  97,
                  114,
                  107,
                  101,
                  116
                ]
              },
              {
                "kind": "arg",
                "path": "market_symbol"
              }
            ]
          }
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "oracle_account"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "market_symbol",
          "type": "string"
        },
        {
          "name": "initial_funding_rate",
          "type": "i64"
        },
        {
          "name": "funding_interval",
          "type": "i64"
        },
        {
          "name": "maintenance_margin_ratio",
          "type": "u64"
        },
        {
          "name": "initial_margin_ratio",
          "type": "u64"
        },
        {
          "name": "max_leverage",
          "type": "u64"
        },
        {
          "name": "bump",
          "type": "u8"
        }
      ]
    },
    {
      "name": "open_position",
      "discriminator": [
        135,
        128,
        47,
        77,
        15,
        152,
        240,
        49
      ],
      "accounts": [
        {
          "name": "market",
          "writable": true
        },
        {
          "name": "position",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  112,
                  111,
                  115,
                  105,
                  116,
                  105,
                  111,
                  110
                ]
              },
              {
                "kind": "account",
                "path": "market"
              },
              {
                "kind": "account",
                "path": "trader"
              }
            ]
          }
        },
        {
          "name": "trader",
          "writable": true,
          "signer": true
        },
        {
          "name": "price_update"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "side",
          "type": {
            "defined": {
              "name": "Side"
            }
          }
        },
        {
          "name": "size",
          "type": "u64"
        },
        {
          "name": "leverage",
          "type": "u64"
        },
        {
          "name": "bump",
          "type": "u8"
        }
      ]
    },
    {
      "name": "update_funding_payments",
      "discriminator": [
        109,
        213,
        51,
        145,
        107,
        110,
        117,
        216
      ],
      "accounts": [
        {
          "name": "market",
          "writable": true
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "update_funding_rate",
      "discriminator": [
        201,
        178,
        116,
        212,
        166,
        144,
        72,
        238
      ],
      "accounts": [
        {
          "name": "market",
          "writable": true
        },
        {
          "name": "authority",
          "signer": true,
          "relations": [
            "market"
          ]
        }
      ],
      "args": [
        {
          "name": "new_funding_rate",
          "type": "i64"
        }
      ]
    },
    {
      "name": "withdraw_collateral",
      "discriminator": [
        115,
        135,
        168,
        106,
        139,
        214,
        138,
        150
      ],
      "accounts": [
        {
          "name": "owner",
          "writable": true,
          "signer": true
        },
        {
          "name": "margin_account",
          "writable": true
        },
        {
          "name": "market"
        },
        {
          "name": "user_token_account",
          "writable": true
        },
        {
          "name": "vault",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "account",
                "path": "margin_account"
              },
              {
                "kind": "const",
                "value": [
                  6,
                  221,
                  246,
                  225,
                  215,
                  101,
                  161,
                  147,
                  217,
                  203,
                  225,
                  70,
                  206,
                  235,
                  121,
                  172,
                  28,
                  180,
                  133,
                  237,
                  95,
                  91,
                  55,
                  145,
                  58,
                  140,
                  245,
                  133,
                  126,
                  255,
                  0,
                  169
                ]
              },
              {
                "kind": "account",
                "path": "mint"
              }
            ],
            "program": {
              "kind": "const",
              "value": [
                140,
                151,
                37,
                143,
                78,
                36,
                137,
                241,
                187,
                61,
                16,
                41,
                20,
                142,
                13,
                131,
                11,
                90,
                19,
                153,
                218,
                255,
                16,
                132,
                4,
                142,
                123,
                216,
                219,
                233,
                248,
                89
              ]
            }
          }
        },
        {
          "name": "mint"
        },
        {
          "name": "token_program",
          "address": "TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": "u64"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "MarginAccount",
      "discriminator": [
        133,
        220,
        173,
        213,
        179,
        211,
        43,
        238
      ]
    },
    {
      "name": "Market",
      "discriminator": [
        219,
        190,
        213,
        55,
        0,
        227,
        198,
        154
      ]
    },
    {
      "name": "Position",
      "discriminator": [
        170,
        188,
        143,
        228,
        122,
        64,
        247,
        208
      ]
    },
    {
      "name": "PriceUpdateV2",
      "discriminator": [
        34,
        241,
        35,
        99,
        157,
        126,
        244,
        205
      ]
    }
  ],
  "events": [
    {
      "name": "CollateralDeposited",
      "discriminator": [
        244,
        62,
        77,
        11,
        135,
        112,
        61,
        96
      ]
    },
    {
      "name": "CollateralWithdrawn",
      "discriminator": [
        51,
        224,
        133,
        106,
        74,
        173,
        72,
        82
      ]
    },
    {
      "name": "FundingRateUpdatedEvent",
      "discriminator": [
        223,
        34,
        205,
        106,
        34,
        251,
        158,
        76
      ]
    },
    {
      "name": "FundingUpdatedEvent",
      "discriminator": [
        30,
        80,
        188,
        77,
        115,
        123,
        191,
        126
      ]
    },
    {
      "name": "MarginAccountCreated",
      "discriminator": [
        157,
        214,
        66,
        63,
        149,
        164,
        160,
        119
      ]
    },
    {
      "name": "MarginAdjustedEvent",
      "discriminator": [
        215,
        144,
        150,
        101,
        181,
        168,
        194,
        93
      ]
    },
    {
      "name": "MarketInitializedEvent",
      "discriminator": [
        70,
        173,
        96,
        202,
        100,
        143,
        45,
        25
      ]
    },
    {
      "name": "MarketParamsUpdatedEvent",
      "discriminator": [
        159,
        73,
        27,
        179,
        194,
        219,
        7,
        230
      ]
    },
    {
      "name": "MarketPausedEvent",
      "discriminator": [
        188,
        195,
        34,
        16,
        53,
        37,
        64,
        100
      ]
    },
    {
      "name": "MarketResumedEvent",
      "discriminator": [
        34,
        56,
        120,
        78,
        71,
        228,
        93,
        131
      ]
    },
    {
      "name": "OrderCancelledEvent",
      "discriminator": [
        200,
        73,
        179,
        145,
        247,
        176,
        10,
        101
      ]
    },
    {
      "name": "OrderFilledEvent",
      "discriminator": [
        218,
        97,
        153,
        209,
        56,
        56,
        251,
        133
      ]
    },
    {
      "name": "OrderPlacedEvent",
      "discriminator": [
        245,
        198,
        202,
        247,
        110,
        231,
        254,
        156
      ]
    },
    {
      "name": "PositionClosedEvent",
      "discriminator": [
        76,
        129,
        10,
        225,
        238,
        51,
        158,
        126
      ]
    },
    {
      "name": "PositionLiquidatedEvent",
      "discriminator": [
        70,
        153,
        226,
        254,
        176,
        139,
        225,
        72
      ]
    },
    {
      "name": "PositionOpenedEvent",
      "discriminator": [
        163,
        1,
        92,
        149,
        138,
        188,
        177,
        23
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "MathOverflow",
      "msg": "Math overflow occurred"
    },
    {
      "code": 6001,
      "name": "Unauthorized",
      "msg": "Operation not authorized"
    },
    {
      "code": 6002,
      "name": "MarketInactive",
      "msg": "Market is currently inactive"
    },
    {
      "code": 6003,
      "name": "PositionClosed",
      "msg": "Position is already closed"
    },
    {
      "code": 6004,
      "name": "InvalidOracleAccount",
      "msg": "Provided oracle account is invalid"
    },
    {
      "code": 6005,
      "name": "StaleOraclePrice",
      "msg": "Oracle price is too old"
    },
    {
      "code": 6006,
      "name": "PriceConfidenceTooLow",
      "msg": "Price confidence interval exceeds acceptable threshold"
    },
    {
      "code": 6007,
      "name": "PositionNotLiquidatable",
      "msg": "Position does not meet liquidation criteria"
    },
    {
      "code": 6008,
      "name": "InvalidOrderSize",
      "msg": "Order size is invalid"
    },
    {
      "code": 6009,
      "name": "InvalidOrderPrice",
      "msg": "Order price is invalid"
    },
    {
      "code": 6010,
      "name": "LeverageTooHigh",
      "msg": "Leverage exceeds maximum allowed"
    },
    {
      "code": 6011,
      "name": "InsufficientMargin",
      "msg": "Insufficient margin provided"
    },
    {
      "code": 6012,
      "name": "InvalidParameter",
      "msg": "Invalid parameter supplied"
    },
    {
      "code": 6013,
      "name": "MarketAlreadyPaused",
      "msg": "Market is already paused"
    },
    {
      "code": 6014,
      "name": "MarketAlreadyActive",
      "msg": "Market is already active"
    },
    {
      "code": 6015,
      "name": "OrderNotActive",
      "msg": "Order is not active"
    },
    {
      "code": 6016,
      "name": "InvalidMarketSymbol",
      "msg": "Invalid market symbol"
    },
    {
      "code": 6017,
      "name": "InvalidFundingRate",
      "msg": "Invalid funding rate"
    },
    {
      "code": 6018,
      "name": "InvalidFundingInterval",
      "msg": "Invalid funding interval"
    },
    {
      "code": 6019,
      "name": "InvalidMarginRatio",
      "msg": "Invalid margin ratio"
    },
    {
      "code": 6020,
      "name": "InvalidLeverage",
      "msg": "Invalid leverage value"
    },
    {
      "code": 6021,
      "name": "InsufficientLiquidity",
      "msg": "Insufficient liquidity in market"
    },
    {
      "code": 6022,
      "name": "PositionSizeTooSmall",
      "msg": "Position size is below minimum"
    },
    {
      "code": 6023,
      "name": "PositionSizeTooLarge",
      "msg": "Position size exceeds maximum"
    },
    {
      "code": 6024,
      "name": "InsufficientCollateral",
      "msg": "Insufficient collateral for this operation"
    },
    {
      "code": 6025,
      "name": "InvalidLeverageRange",
      "msg": "Leverage is outside allowed range"
    },
    {
      "code": 6026,
      "name": "OrderNotFound",
      "msg": "Order not found"
    },
    {
      "code": 6027,
      "name": "PositionLiquidated",
      "msg": "Position has been liquidated"
    },
    {
      "code": 6028,
      "name": "MarginCallRequired",
      "msg": "Margin call required before further operations"
    },
    {
      "code": 6029,
      "name": "WithdrawalBelowMaintenanceMargin",
      "msg": "Withdrawal would put account below maintenance margin"
    },
    {
      "code": 6030,
      "name": "DepositTooSmall",
      "msg": "Deposit amount is too small"
    },
    {
      "code": 6031,
      "name": "WithdrawalTooSmall",
      "msg": "Withdrawal amount is too small"
    },
    {
      "code": 6032,
      "name": "InvalidPosition",
      "msg": "Invalid position provided"
    }
  ],
  "types": [
    {
      "name": "CollateralDeposited",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "margin_account",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "CollateralWithdrawn",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "margin_account",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "FundingRateUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "authority",
            "type": "pubkey"
          },
          {
            "name": "old_funding_rate",
            "type": "i64"
          },
          {
            "name": "new_funding_rate",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "FundingUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "funding_rate",
            "type": "i64"
          },
          {
            "name": "intervals",
            "type": "i64"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "MarginAccount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "perp_market",
            "type": "pubkey"
          },
          {
            "name": "collateral",
            "type": "u64"
          },
          {
            "name": "orders",
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "positions",
            "type": {
              "vec": "pubkey"
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "MarginAccountCreated",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "margin_account",
            "type": "pubkey"
          },
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "MarginAdjustedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "position",
            "type": "pubkey"
          },
          {
            "name": "trader",
            "type": "pubkey"
          },
          {
            "name": "margin_change",
            "type": "i64"
          },
          {
            "name": "new_collateral",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "Market",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "authority",
            "type": "pubkey"
          },
          {
            "name": "market_symbol",
            "type": "string"
          },
          {
            "name": "base_asset_reserve",
            "type": "u64"
          },
          {
            "name": "quote_asset_reserve",
            "type": "u64"
          },
          {
            "name": "funding_rate",
            "type": "i64"
          },
          {
            "name": "last_funding_time",
            "type": "i64"
          },
          {
            "name": "funding_interval",
            "type": "i64"
          },
          {
            "name": "maintenance_margin_ratio",
            "type": "u64"
          },
          {
            "name": "initial_margin_ratio",
            "type": "u64"
          },
          {
            "name": "fee_pool",
            "type": "u64"
          },
          {
            "name": "insurance_fund",
            "type": "u64"
          },
          {
            "name": "max_leverage",
            "type": "u64"
          },
          {
            "name": "oracle",
            "type": "pubkey"
          },
          {
            "name": "is_active",
            "type": "bool"
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "MarketInitializedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "authority",
            "type": "pubkey"
          },
          {
            "name": "market_symbol",
            "type": "string"
          },
          {
            "name": "funding_rate",
            "type": "i64"
          },
          {
            "name": "funding_interval",
            "type": "i64"
          },
          {
            "name": "maintenance_margin_ratio",
            "type": "u64"
          },
          {
            "name": "initial_margin_ratio",
            "type": "u64"
          },
          {
            "name": "max_leverage",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "MarketParamsUpdatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "authority",
            "type": "pubkey"
          },
          {
            "name": "maintenance_margin_ratio",
            "type": "u64"
          },
          {
            "name": "initial_margin_ratio",
            "type": "u64"
          },
          {
            "name": "funding_interval",
            "type": "i64"
          },
          {
            "name": "max_leverage",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "MarketPausedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "authority",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "MarketResumedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "authority",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "OrderCancelledEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "order",
            "type": "pubkey"
          },
          {
            "name": "trader",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "OrderFilledEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "order",
            "type": "pubkey"
          },
          {
            "name": "trader",
            "type": "pubkey"
          },
          {
            "name": "side",
            "type": {
              "defined": {
                "name": "Side"
              }
            }
          },
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "filled_size",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "OrderPlacedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "order",
            "type": "pubkey"
          },
          {
            "name": "trader",
            "type": "pubkey"
          },
          {
            "name": "side",
            "type": {
              "defined": {
                "name": "Side"
              }
            }
          },
          {
            "name": "order_type",
            "type": {
              "defined": {
                "name": "OrderType"
              }
            }
          },
          {
            "name": "price",
            "type": "u64"
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "leverage",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "OrderType",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Limit"
          },
          {
            "name": "Market"
          },
          {
            "name": "StopLoss"
          },
          {
            "name": "TakeProfit"
          }
        ]
      }
    },
    {
      "name": "Position",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "trader",
            "type": "pubkey"
          },
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "side",
            "type": {
              "defined": {
                "name": "Side"
              }
            }
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "collateral",
            "type": "u64"
          },
          {
            "name": "entry_price",
            "type": "u64"
          },
          {
            "name": "entry_funding_rate",
            "type": "i64"
          },
          {
            "name": "leverage",
            "type": "u64"
          },
          {
            "name": "realized_pnl",
            "type": "i64"
          },
          {
            "name": "last_funding_payment_time",
            "type": "i64"
          },
          {
            "name": "last_cumulative_funding",
            "type": "i64"
          },
          {
            "name": "liquidation_price",
            "type": "u64"
          },
          {
            "name": "is_open",
            "type": "bool"
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "PositionClosedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "position",
            "type": "pubkey"
          },
          {
            "name": "trader",
            "type": "pubkey"
          },
          {
            "name": "side",
            "type": {
              "defined": {
                "name": "Side"
              }
            }
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "collateral",
            "type": "u64"
          },
          {
            "name": "entry_price",
            "type": "u64"
          },
          {
            "name": "exit_price",
            "type": "u64"
          },
          {
            "name": "realized_pnl",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "PositionLiquidatedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "position",
            "type": "pubkey"
          },
          {
            "name": "trader",
            "type": "pubkey"
          },
          {
            "name": "liquidator",
            "type": "pubkey"
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "collateral",
            "type": "u64"
          },
          {
            "name": "liquidation_price",
            "type": "u64"
          },
          {
            "name": "liquidation_fee",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "PositionOpenedEvent",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "market",
            "type": "pubkey"
          },
          {
            "name": "position",
            "type": "pubkey"
          },
          {
            "name": "trader",
            "type": "pubkey"
          },
          {
            "name": "side",
            "type": {
              "defined": {
                "name": "Side"
              }
            }
          },
          {
            "name": "size",
            "type": "u64"
          },
          {
            "name": "collateral",
            "type": "u64"
          },
          {
            "name": "entry_price",
            "type": "u64"
          },
          {
            "name": "leverage",
            "type": "u64"
          },
          {
            "name": "liquidation_price",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "PriceFeedMessage",
      "repr": {
        "kind": "c"
      },
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "feed_id",
            "docs": [
              "`FeedId` but avoid the type alias because of compatibility issues with Anchor's `idl-build` feature."
            ],
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "price",
            "type": "i64"
          },
          {
            "name": "conf",
            "type": "u64"
          },
          {
            "name": "exponent",
            "type": "i32"
          },
          {
            "name": "publish_time",
            "docs": [
              "The timestamp of this price update in seconds"
            ],
            "type": "i64"
          },
          {
            "name": "prev_publish_time",
            "docs": [
              "The timestamp of the previous price update. This field is intended to allow users to",
              "identify the single unique price update for any moment in time:",
              "for any time t, the unique update is the one such that prev_publish_time < t <= publish_time.",
              "",
              "Note that there may not be such an update while we are migrating to the new message-sending logic,",
              "as some price updates on pythnet may not be sent to other chains (because the message-sending",
              "logic may not have triggered). We can solve this problem by making the message-sending mandatory",
              "(which we can do once publishers have migrated over).",
              "",
              "Additionally, this field may be equal to publish_time if the message is sent on a slot where",
              "where the aggregation was unsuccesful. This problem will go away once all publishers have",
              "migrated over to a recent version of pyth-agent."
            ],
            "type": "i64"
          },
          {
            "name": "ema_price",
            "type": "i64"
          },
          {
            "name": "ema_conf",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "PriceUpdateV2",
      "docs": [
        "A price update account. This account is used by the Pyth Receiver program to store a verified price update from a Pyth price feed.",
        "It contains:",
        "- `write_authority`: The write authority for this account. This authority can close this account to reclaim rent or update the account to contain a different price update.",
        "- `verification_level`: The [`VerificationLevel`] of this price update. This represents how many Wormhole guardian signatures have been verified for this price update.",
        "- `price_message`: The actual price update.",
        "- `posted_slot`: The slot at which this price update was posted."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "write_authority",
            "type": "pubkey"
          },
          {
            "name": "verification_level",
            "type": {
              "defined": {
                "name": "VerificationLevel"
              }
            }
          },
          {
            "name": "price_message",
            "type": {
              "defined": {
                "name": "PriceFeedMessage"
              }
            }
          },
          {
            "name": "posted_slot",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "Side",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Long"
          },
          {
            "name": "Short"
          }
        ]
      }
    },
    {
      "name": "VerificationLevel",
      "docs": [
        "Pyth price updates are bridged to all blockchains via Wormhole.",
        "Using the price updates on another chain requires verifying the signatures of the Wormhole guardians.",
        "The usual process is to check the signatures for two thirds of the total number of guardians, but this can be cumbersome on Solana because of the transaction size limits,",
        "so we also allow for partial verification.",
        "",
        "This enum represents how much a price update has been verified:",
        "- If `Full`, we have verified the signatures for two thirds of the current guardians.",
        "- If `Partial`, only `num_signatures` guardian signatures have been checked.",
        "",
        "# Warning",
        "Using partially verified price updates is dangerous, as it lowers the threshold of guardians that need to collude to produce a malicious price update."
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Partial",
            "fields": [
              {
                "name": "num_signatures",
                "type": "u8"
              }
            ]
          },
          {
            "name": "Full"
          }
        ]
      }
    }
  ]
}